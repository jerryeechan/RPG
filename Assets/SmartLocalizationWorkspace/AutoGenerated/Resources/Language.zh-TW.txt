<?xml version="1.0" encoding="utf-8"?>
<root><!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
	<data name="line_ch1_bw_fee_1" xml:space="preserve">
		<value />
	</data>
	<data name="line_ch1_bw_fee_2" xml:space="preserve">
		<value />
	</data>
	<data name="line_ch1_bw_fee_3" xml:space="preserve">
		<value />
	</data>
	<data name="line_ch1_bw_fee_3opt1" xml:space="preserve">
		<value />
	</data>
	<data name="line_ch1_bw_fee_3opt2" xml:space="preserve">
		<value />
	</data>
	<data name="line_ch1_bw_fee_3opt3" xml:space="preserve">
		<value />
	</data>
	<data name="line_ch1_bw_fee_4" xml:space="preserve">
		<value />
	</data>
	<data name="CON" xml:space="preserve">
		<value>體質</value>
	</data>
	<data name="DarkPaladin" xml:space="preserve">
		<value>黑騎士</value>
	</data>
	<data name="description_skill_dark_charge" xml:space="preserve">
		<value />
	</data>
	<data name="DEX" xml:space="preserve">
		<value>敏捷</value>
	</data>
	<data name="event_enemy_ogre" xml:space="preserve">
		<value>食人魔出現了</value>
	</data>
	<data name="event_enemy_zombies" xml:space="preserve">
		<value>殭屍群出現了！！</value>
	</data>
	<data name="fight_btn" xml:space="preserve">
		<value>戰鬥！</value>
	</data>
	<data name="ignore" xml:space="preserve">
		<value>忽略</value>
	</data>
	<data name="INT" xml:space="preserve">
		<value>智力</value>
	</data>
	<data name="line_ch0_lord_of_soil_1" xml:space="preserve">
		<value>那就先麻煩你們處理一下城外的殭屍們，讓各位熟悉一下新的力量。</value>
	</data>
	<data name="line_ch0_lord_of_soil_2" xml:space="preserve">
		<value>諸位真是厲害啊！老夫果然沒有看錯人呢！呵呵呵</value>
	</data>
	<data name="line_ch0_lord_of_soil_3" xml:space="preserve">
		<value>這是我給各位的一點心意，請務必收下。</value>
	</data>
	<data name="line_ch1_bw_plot1_1" xml:space="preserve">
		<value>恩、喔又是你們啊?</value>
	</data>
	<data name="line_ch1_bw_plot1_2" xml:space="preserve">
		<value>看在你們每次都乖乖交過路費的份上，就跟你說件小祕密好了?</value>
	</data>
	<data name="line_ch1_bw_plot1_3opt_1" xml:space="preserve">
		<value>什麼秘密阿?快告訴我</value>
	</data>
	<data name="line_ch1_bw_plot1_3opt_2" xml:space="preserve">
		<value>恩、你說吧</value>
	</data>
	<data name="line_ch1_bw_plot1_3opt_3" xml:space="preserve">
		<value>算了吧、我懶得聽、不用告訴我了</value>
	</data>
	<data name="line_ch1_bw_plot1_4_1" xml:space="preserve">
		<value>你們不會真的以為西方那個大傢伙沒是隨隨便便就跑到這邊來踩房子搞破壞吧?</value>
	</data>
	<data name="line_ch1_bw_plot1_4_2" xml:space="preserve">
		<value>聽說好像是因為跟閻王爺有什麼糾紛呢</value>
	</data>
	<data name="line_ch1_bw_plot1_5" xml:space="preserve">
		<value>咦?原來是這樣嗎?</value>
	</data>
	<data name="line_ch1_bw_plot1_6" xml:space="preserve">
		<value>就是說阿、到最後都是我們這些池魚遭殃(攤手)</value>
	</data>
	<data name="line_ch1_bw_plot1_7" xml:space="preserve">
		<value>這樣啊、那就慢走不送拉~</value>
	</data>
	<data name="Mage" xml:space="preserve">
		<value>魔法師</value>
	</data>
	<data name="Paladin" xml:space="preserve">
		<value>聖騎士</value>
	</data>
	<data name="Priest" xml:space="preserve">
		<value>祭司</value>
	</data>
	<data name="revive" xml:space="preserve">
		<value>輪迴詠唱</value>
	</data>
	<data name="skill_dark_charge" xml:space="preserve">
		<value>黑暗衝擊</value>
	</data>
	<data name="skill_dark_shield" xml:space="preserve">
		<value>渾沌之盾</value>
	</data>
	<data name="skill_dark_slash" xml:space="preserve">
		<value>暗冥斬</value>
	</data>
	<data name="skill_divine_shield" xml:space="preserve">
		<value>聖盾術</value>
	</data>
	<data name="skill_elemental_blessing" xml:space="preserve">
		<value>元素加持</value>
	</data>
	<data name="skill_fireball" xml:space="preserve">
		<value>火球術</value>
	</data>
	<data name="skill_firestorm" xml:space="preserve">
		<value>火焰風暴</value>
	</data>
	<data name="skill_heal" xml:space="preserve">
		<value>治癒術</value>
	</data>
	<data name="skill_holyray" xml:space="preserve">
		<value>聖光</value>
	</data>
	<data name="skill_invincible" xml:space="preserve">
		<value>金鋼護體</value>
	</data>
	<data name="skill_paralyze_talisman" xml:space="preserve">
		<value>定身符</value>
	</data>
	<data name="skill_storm_talisman" xml:space="preserve">
		<value>起風符</value>
	</data>
	<data name="skill_thunder_talisman" xml:space="preserve">
		<value>役雷符</value>
	</data>
	<data name="STR" xml:space="preserve">
		<value>力量</value>
	</data>
	<data name="TaoistPriest" xml:space="preserve">
		<value>道士</value>
	</data>
</root>